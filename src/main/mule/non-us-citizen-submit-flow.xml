<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
	<flow name="non-us-citizen-submit-flowFlow" doc:id="45666800-b709-4e9e-a140-3c09a87652a4">
		<!-- <logger level="INFO" doc:name="Log Application Id"
			doc:id="20077325-cc48-4987-8265-0f8ee070f071"
			message="In NRA flow for Application Id ::::::::::::::::::: #[vars.ApplicationId] Request UUID #[correlationId] Flow Name #[flow.name]" /> -->
				
		<json-logger:logger doc:name="In NRA flow for Application Id " doc:id="48f27e2f-6ed8-4f33-8c65-8fa56abcea96" config-ref="JSON_Logger_Config" message="In NRA flow for Application Id " priority="DEBUG" tracePoint="PRINT">
			<json-logger:content ><![CDATA[#[output application/json ---
{
 	
}]]]></json-logger:content>
		</json-logger:logger>
		<ee:transform doc:name="Transform Message"
			doc:id="a10d11cf-0749-484d-8352-6f330b30b74f">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="pinpointRequest"><![CDATA[%dw 2.0
output application/json
---
[
	{
	"RequestUUID": payload.RequestUUID,
	"handler": payload.PinPointRequest[0].handler,
	"customer_session_id": payload.PinPointRequest[0].customer_session_id,
	"remote_addr": payload.PinPointRequest[0].remote_addr,
	"user_agent": payload.PinPointRequest[0].user_agent,
	"result": payload.PinPointRequest[0].result,
	"channel": payload.PinPointRequest[0].channel,
	"new_account_data": {
						"new_account": payload.PinPointRequest[0].new_account_data.new_account,
						 "first_name": payload.PinPointRequest[0].new_account_data.first_name,
						 "last_name": payload.PinPointRequest[0].new_account_data.last_name,
						 "phone_number": payload.PinPointRequest[0].new_account_data.phone_number,
						 "email": payload.PinPointRequest[0].new_account_data.email,
	    }
	},
	{
      "handler": payload.PinPointRequest[1].handler,
      "customer_session_id": payload.PinPointRequest[1].customer_session_id,
      "remote_addr": payload.PinPointRequest[1].remote_addr,
      "user_agent": payload.PinPointRequest[1].user_agent,
      "activity": payload.PinPointRequest[1].activity,
      "url": payload.PinPointRequest[1].url,
      "timestamp":  payload.PinPointRequest[1].timestamp
  }
]]]></ee:set-variable>
				<ee:set-variable variableName="TruliooIdVerificationRequest" ><![CDATA[%dw 2.0
output application/json
---
{  
   "AcceptTruliooTermsAndConditions": payload.IdVerificationRequest.AcceptTruliooTermsAndConditions,
   "CleansedAddress": payload.IdVerificationRequest.CleansedAddress,
   "VerboseMode":payload.IdVerificationRequest.VerboseMode,
   "CountryCode":payload.IdVerificationRequest.CountryCode,
   "ConfigurationName": payload.IdVerificationRequest.ConfigurationName,
   "DataFields":{  
      "PersonInfo": payload.IdVerificationRequest.DataFields.PersonInfo,
      "Communication": payload.IdVerificationRequest.DataFields.Communication,
      "DriverLicence": {},
      "NationalIds":[  
         {  
            "Type":payload.IdVerificationRequest.DataFields.NationalIds[0].Type,
            "Number":payload.IdVerificationRequest.DataFields.NationalIds[0].IDNumber
         }
      ]
   }
} 

]]></ee:set-variable>
				<ee:set-variable variableName="IdAuthenticationResponse" ><![CDATA[%dw 2.0
output application/java
---
payload.IdAuthenticationResponse]]></ee:set-variable>
				<ee:set-variable variableName="originalPayload" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
				<ee:set-variable variableName="tmpPass" ><![CDATA[%dw 2.0
output application/json
---
payload.Pass]]></ee:set-variable>
				<ee:set-variable variableName="pepFlag" ><![CDATA[%dw 2.0
output application/json
---
payload.CustomerInformation.PEP]]></ee:set-variable>
				<ee:set-variable variableName="approvedVar" ><![CDATA[%dw 2.0
output application/json
var approvedVar = "${variables.caseStatus.APRROVED}"
---
approvedVar]]></ee:set-variable>
			
</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="86ad2668-cf30-44e1-bb18-601564c199c0" >
			<when expression="vars.IsPartnerRequest" >
				<logger level="INFO" doc:name="Logger" doc:id="10424e3d-4e3b-4934-91a3-1933e63dafbb" message="Pep Check is not required for Partner APIs Request UUID #[correlationId] Flow Name #[flow.name]"/>
				<set-variable value="ok" doc:name="Set Variable" doc:id="4b04c608-c4ce-461b-9621-31589a104abd" variableName="pinPointStatus"/>
				<ee:transform doc:name="Transform Message" doc:id="a17e75a5-1f37-400f-87d5-5c48fdda07a6" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="pinpointRecommendationInfo" ><![CDATA[%dw 2.0
output application/json
---
{
	"recommendation": {
		"recommendation": "allow"		
	}	
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</when>
			<otherwise >
				<flow-ref doc:name="pinPointFlow" doc:id="dad6ba17-048d-460c-a935-765362b4f0ef" name="pinPointFlow" />
				<set-variable value="#[vars.pinpointResponse.data[1].status]" doc:name="SetPinPointStatus" doc:id="59e2a825-4e98-4e16-9cf1-7cb80db1c2e2" variableName="pinPointStatus" />
				<ee:transform doc:name="Transform Message" doc:id="3efde910-3ac6-4a1f-a387-881642c01751" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="pinpointRecommendationInfo" ><![CDATA[%dw 2.0
output application/json
---
{
	recommendation: if ( (vars.pinpointResponse.data[1].message) is Object) ({
		recommendation: vars.pinpointResponse.data[1].message.recommendation.recommendation,
		resolution_id: vars.pinpointResponse.data[1].message.recommendation.resolution_id,
		reason_id: vars.pinpointResponse.data[1].message.recommendation.reason_id,
		reason: vars.pinpointResponse.data[1].message.recommendation.reason,
		risk_score: vars.pinpointResponse.data[1].message.recommendation.risk_score
	})  else null,
	risk_engine_recommendation: if ( (vars.pinpointResponse.data[1].message) is Object) ({
		risk_score: vars.pinpointResponse.data[1].message.risk_engine_recommendation.risk_score,
		reason_id: vars.pinpointResponse.data[1].message.risk_engine_recommendation.reason_id,
		recommendation: vars.pinpointResponse.data[1].message.risk_engine_recommendation.recommendation,
		reason: vars.pinpointResponse.data[1].message.risk_engine_recommendation.reason
	}) else null,
	customer_session_id: if ( (vars.pinpointResponse.data[1].message) is Object) vars.pinpointResponse.data[1].message.customer_session_id else null
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</otherwise>
		</choice>		
		<choice doc:name="Choice" doc:id="4a879b5f-ea26-4eb4-bf74-9790c1f71b18">
			<when expression='vars.pinPointStatus == "ok" and (vars.THREAT_INTELLIGENCE_PASS_REASONS contains vars.pinpointRecommendationInfo.recommendation.recommendation)'>
				<logger level="INFO" doc:name="Logger"
					doc:id="98c38425-b9c1-4a6d-be6b-caf9fde0455e" message="idauthcheckflow Request UUID #[correlationId] Flow Name #[flow.name]" />
				<scatter-gather doc:name="Scatter-Gather" doc:id="f3058301-835d-4bab-8e95-7bc5adbd7d4d">
					<route >
						<flow-ref doc:name="trulioo-idverification-system-api-callFlow" doc:id="4450b3cb-34fd-424e-a68b-5cdb0a9025e8" name="trulioo-idverification-system-api-callFlow" />
					</route>
					<route >
						<flow-ref doc:name="ofacCallSubFlow" doc:id="c79b815b-637d-4499-bbed-f728cde8cc50" name="ofacCallSubFlow" />
					</route>
					<route >
						<flow-ref doc:name="idauthcheckflow" doc:id="2e739620-60fb-40f7-840d-78080a32724d" name="idauthcheckflow" />
					</route>
				</scatter-gather>
				<!-- <logger level="INFO" doc:name="Logger" doc:id="d6677415-08db-4655-adc4-db1e34607030" message="Payload after scatter-Gather #[payload] Request UUID #[correlationId] Flow Name  #[flow.name]"/>-->
				<json-logger:logger doc:name="Payload after scatter-Gather" doc:id="5782a41e-41c0-4f2d-ae04-7bac3fccc81f" config-ref="JSON_Logger_Config" message="Payload after scatter-Gather" priority="DEBUG" tracePoint="PRINT">
					<json-logger:content ><![CDATA[#[output application/json ---
{
 	payload: payload
}]]]></json-logger:content>
				</json-logger:logger>
				<set-payload value="#[vars.originalPayload]" doc:name="Set Payload" doc:id="96e6eecc-1020-4403-bea5-af03818f69b1" />
				
				<flow-ref doc:name="non-us-citizen-case-decision-flow" doc:id="5b17d20a-8e73-4684-a217-6abb76e7ca5b" name="non-us-citizen-case-decision-flow"/>

		
</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger"
					doc:id="93efba95-f12e-4922-b230-555f0d3c3709"
					message="PinPoint Session Not Found or PinPoint Server is unavailable Request UUID #[correlationId] Flow Name #[flow.name]" />
				<set-variable value="${variables.caseStatus.PENDING}"
					doc:name="SetCaseStatus" doc:id="fdbf8962-e5c0-48f8-a359-449c4c85d913"
					variableName="caseStatus" />
				<set-variable value="#[vars.pinpointResponse.data[1].message]"
					doc:name="SetPinPointSessionExpired" doc:id="8850eef1-3785-4b83-b41a-64bc94eaad0f"
					variableName="pinPointSessionExpired" />
				<flow-ref doc:name="ofacCallSubFlow" doc:id="e64a74c9-3bff-4bd5-9120-5cb15a601739"
					name="ofacCallSubFlow" />
				<flow-ref doc:name="caseCreationFlow" doc:id="005ea6ab-8c5e-487e-b44f-fd40f28cd43d"
					name="caseCreationFlow" />
				<logger level="INFO" doc:name="Logger"
					doc:id="9f9ff13a-2281-4926-8bba-18c2a65cb013" message="Pre Submit Response :::::::::::::::::::::: #[payload] Request UUID #[correlationId] Flow Name #[flow.name]" />

			</otherwise>
		</choice>
		<logger doc:name="Logger"
			message="PreSubmit Response for Application Id #[vars.ApplicationId] ::::::::::::::::::::::::::::::: #[payload] Request UUID #[correlationId] Flow Name #[flow.name]"
			level="INFO"></logger>
	</flow>
	<flow name="non-us-citizen-case-decision-flow" doc:id="9efe1a39-d1d4-4f88-87e2-753498bab9b7" >
		<choice doc:name="Choice" doc:id="db0bbee0-645b-4c68-ae1a-bc702706da61" >
			<when expression="vars.selEnv != 'prd' and vars.tmpPass == true" >
				<logger level="INFO" doc:name="ByPass" doc:id="e46bf048-bcaa-4c7c-b628-591bef535a0a" message="#[vars.ApplicationId] ByPass Method called Request UUID #[correlationId] Flow Name #[flow.name]"/>
				<set-variable value="${variables.caseStatus.APRROVED}" doc:name="SetCaseStatus" doc:id="63faec01-ee10-4483-b15e-80c90662114f" variableName="caseStatus"/>			
			
</when>			
			<when expression="not isEmpty(vars.exceptionFlag) ">
				<logger level="INFO" doc:name="ExceptionCaseCreation" doc:id="fcad6be2-133a-48b0-934b-cfef1f131196" message="#[vars.ApplicationId] Create a Case Request for Exception found Request UUID #[correlationId] Flow Name #[flow.name]"/>
				<set-variable value="${variables.caseStatus.PENDING}" doc:name="SetCaseStatus" doc:id="63f68155-5d17-4486-9e45-8355b3e655e9" variableName="caseStatus" />							
			</when>		
			<when expression='vars.ofacResponse.ResultStatus == "Match"' >
				<logger level="INFO" doc:name="ofac returned false" doc:id="d3efd8ce-bb9f-4158-b51b-b16db1bd3c4d" message="For Application Id #[vars.ApplicationId] ofac IsCheckPass returned false Request UUID #[correlationId] Flow Name #[flow.name]"/>
				<set-variable value="${variables.caseStatus.PENDING}" doc:name="SetCaseStatus" doc:id="d34c6d7b-003c-4a72-8c82-b792da5a5c24" variableName="caseStatus" />
			</when>
			<when expression="#[vars.pepFlag=='Yes'  or vars.pepResponse.ResultStatus == &quot;Match&quot;]" >
				<logger level="INFO" doc:name="pepIsSetToYes" doc:id="fcad6be2-133a-48b0-934b-cfef1f131196" message="#[vars.ApplicationId] Pep flag is set to Yes Request UUID #[correlationId] Flow Name #[flow.name]"/>
				<set-variable value="${variables.caseStatus.PENDING}" doc:name="SetCaseStatus" doc:id="85d90943-7cb9-4491-b6dd-6c04a924e10e" variableName="caseStatus"/>				
			</when>
			<!-- <when expression="#[vars.idAuthRecordStatus == 'Fail' and vars.idVerificationRecordStatus == 'Fail']" >
				<logger level="INFO" doc:name="IdAuthentication or IdVerification Failed" doc:id="d3efd8ce-bb9f-4158-b51b-b16db1bd3c4d" message="For Application Id #[vars.ApplicationId] IdAuthentication Record Status is #[vars.idAuthRecordStatus] &amp; IdVerification Record Status is #[vars.idVerificationRecordStatus]"/>
				<set-variable value="${variables.caseStatus.DECLINE}" doc:name="SetCaseStatus" doc:id="d34c6d7b-003c-4a72-8c82-b792da5a5c24" variableName="caseStatus" />
			</when>  -->
			<when expression="#[vars.idAuthRecordStatus == 'Fail' or vars.idVerificationRecordStatus == 'Fail']" >
				<logger level="INFO" doc:name="IdAuthentication or IdVerification Failed" doc:id="b5a61b15-2330-4de7-81d5-832bd6462d42" message="For Application Id #[vars.ApplicationId] IdAuthentication Record Status is #[vars.idAuthRecordStatus] &amp; IdVerification Record Status is #[vars.idVerificationRecordStatus]"/>
				<set-variable value="${variables.caseStatus.PENDING}" doc:name="SetCaseStatus" doc:id="17967791-9fae-4de8-b36e-2425c35750a2" variableName="caseStatus" />
			</when>
			<when expression="vars.IsPartnerRequest and vars.idVerificationRecordStatus == 'Pass' and vars.ofacResponse.ResultStatus == &quot;No Match&quot; and vars.pepFlag=='No'  and (vars.pepResponse.ResultStatus == &quot;No Match&quot;  or vars.pepResponse.ResultStatus == &quot;Automatic False Positive&quot;)" >
				<logger level="INFO" doc:name="IdVerification Passed for Partner request" doc:id="d3efd8ce-bb9f-4158-b51b-b16db1bd3c4d" message="For Application Id #[vars.ApplicationId] IdAuthentication Record Status is #[vars.idAuthRecordStatus] &amp; IdVerification Record Status is #[vars.idVerificationRecordStatus]"/>
				<set-variable value="${variables.caseStatus.APRROVED}" doc:name="SetCaseStatus" doc:id="31dfc0cf-01ad-4f55-a027-8f145b0b0ca3" variableName="caseStatus" />
			
			</when>
			<when expression="vars.IsPartnerRequest == false and vars.idAuthRecordStatus == 'Pass' and vars.idVerificationRecordStatus == 'Pass'" >
				<logger level="INFO" doc:name="IdAuthentication and IdVerification Passed" doc:id="d3efd8ce-bb9f-4158-b51b-b16db1bd3c4d" message="For Application Id #[vars.ApplicationId] IdAuthentication Record Status is #[vars.idAuthRecordStatus] &amp; IdVerification Record Status is #[vars.idVerificationRecordStatus]"/>
				<set-variable value="${variables.caseStatus.APRROVED}" doc:name="SetCaseStatus" doc:id="31dfc0cf-01ad-4f55-a027-8f145b0b0ca3" variableName="caseStatus" />
			
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="fcad6be2-133a-48b0-934b-cfef1f131196" message="Create a Case Request Request UUID #[correlationId] Flow Name #[flow.name]"/>
				<set-variable value="${variables.caseStatus.PENDING}" doc:name="SetCaseStatus" doc:id="63f68155-5d17-4486-9e45-8355b3e655e9" variableName="caseStatus"/>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Logger" doc:id="c33abfd3-9eb7-4c7e-8f7e-727f8da7f170" message="#[vars.ApplicationId] Application status is #[vars.caseStatus] Request UUID #[correlationId] Flow Name #[flow.name]"/>		
		<choice doc:name="Choice" doc:id="083e6b39-e9f4-4afc-a163-b729755a0220" >
			<when expression="vars.IsPartnerRequest and vars.caseStatus == vars.approvedVar" >
				<logger level="INFO" doc:name="Logger" doc:id="af139633-2f45-442f-b40a-fcbf626d5812" message="Application #[vars.ApplicationId] Approved . Updating FIS for Partner API request Request UUID #[correlationId] Flow Name #[flow.name]"/>
				<flow-ref doc:name="fis-system-api-callFlow" doc:id="1cda1fb5-2de8-4af3-a563-dc5f64303ed1" name="fis-system-api-callFlow"/>
				<async doc:name="Async" doc:id="9845c6b5-4e39-4beb-a97e-111e71fe7796" >
					<flow-ref doc:name="enrollEstatementcheck_sub_flow" doc:id="4d9f9655-54ba-4bbf-bd8c-6d4447031ad8" name="enrollEstatementcheck_sub_flow"/>
				</async>
				<choice doc:name="Choice" doc:id="16fb6750-73b5-4aa1-bc03-e090f428f795" >
					<when expression="vars.skipOktaUpdate == 'true'" >
						<logger level="INFO" doc:name="Logger" doc:id="b451a868-75cf-4105-895c-48921a1ea256" message="Request UUID #[correlationId] Flow Name #[flow.name]::Skipping Okta Update because as FIS update was unsuccessfull"/>
					</when>
					<otherwise >
						<!-- <flow-ref doc:name="OktaUpdateUserprofile" doc:id="02fd0d60-c2fe-444d-a6a6-4e341c64b4f5" name="okta-flow-update-partner-Sub_Flow" /> -->
						<flow-ref doc:name="OktaValidation" doc:id="d0076374-eccc-4af9-9a42-7f66c70a59b8" name="OktaValidation"/>
					</otherwise>
				</choice>				
				<flow-ref doc:name="caseCreationFlow" doc:id="139b009e-288e-40ed-83ce-dec0517bead0" name="caseCreationFlow"/>
			</when>
			<when expression="vars.caseStatus == vars.approvedVar " >
				<logger level="INFO" doc:name="Logger" doc:id="af139633-2f45-442f-b40a-fcbf626d5812" message="Application #[vars.ApplicationId] Approved . Updating FIS, Promo &amp; Synergy (if required) Request UUID #[correlationId] Flow Name #[flow.name]"/>
				<flow-ref doc:name="updateCoreSystemFlow" doc:id="1cda1fb5-2de8-4af3-a563-dc5f64303ed1" name="updateCoreSystemFlow"/>
			</when>
			<otherwise>
				<flow-ref doc:name="caseCreationFlow" doc:id="139b009e-288e-40ed-83ce-dec0517bead0" name="caseCreationFlow"/>
			</otherwise>
		</choice>
	</flow>
</mule>
